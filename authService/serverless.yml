# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: knamaws
# "service" is the name of this project. This will also be added to your AWS resource names.
service: authService

provider:
  name: aws
  runtime: nodejs22.x
  region: ap-southeast-2
  environment:
    CLIENT_ID: ${ssm:/CLIENT_ID}
    REGION: ap-southeast-2
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:PutItem
      Resource: 
        - arn:aws:dynamodb:ap-southeast-2:858650445768:table/Users
  # Uncomment to easily set up a custom domain. Read the docs for more details:
  # https://www.serverless.com/framework/docs/providers/aws/guide/domains
  # domain: api.example.com

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users # Table name
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S # S = String
        KeySchema:
          - AttributeName: userId
            KeyType: HASH # Partition key
        BillingMode: PAY_PER_REQUEST

functions:
  signUp:
    handler: handlers/signUp.signUp
    events:
      - httpApi:
          path: /sign-up
          method: post
  confirmSignUp:
    handler: handlers/confirmSignUp.confirmSignUp
    events:
      - httpApi:
          path: /confirm-sign-up
          method: post
  signIn:
    handler: handlers/signIn.signIn
    events:
      - httpApi:
          path: /sign-in
          method: post
  signOut:
    handler: handlers/signOut.signOut
    events:
      - httpApi:
          path: /sign-out
          method: post
  forgotPassword:
    handler: handlers/forgotPassword.forgotPassword
    events:
      - httpApi:
          path: /forgot-password
          method: post
  confirmForgotPassword:
    handler: handlers/confirmForgotPassword.confirmForgotPassword
    events:
      - httpApi:
          path: /confirm-forgot-password
          method: post
