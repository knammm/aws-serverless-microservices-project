# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: knamaws
# "service" is the name of this project. This will also be added to your AWS resource names.
service: bannerService

provider:
  name: aws
  runtime: nodejs22.x
  region: ap-southeast-2
  environment:
    REGION: ap-southeast-2
    BUCKET_NAME: jinas-banner-images-bucket
    TABLE_NAME: Banners
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:PutObject'
      Resource: arn:aws:s3:::jinas-banner-images-bucket/*
    - Effect: 'Allow'
      Action:
        - 'dynamodb:PutItem'
      Resource: arn:aws:dynamodb:ap-southeast-2:858650445768:table/Banners

resources:
  Resources:
    BannerImagesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: jinas-banner-images-bucket
    BannersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Banners
        AttributeDefinitions:
          - AttributeName: fileName
            AttributeType: S
        KeySchema:
          - AttributeName: fileName
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
  
  # Uncomment to easily set up a custom domain. Read the docs for more details:
  # https://www.serverless.com/framework/docs/providers/aws/guide/domains
  # domain: api.example.com

functions:
  uploadBannerImage:
    handler: handlers/uploadBanner.getUploadUrl
    events:
      - httpApi:
          path: /upload-banner
          method: post
  confirmUpload:
    handler: handlers/confirmUpload.confirmUpload
    events:
      - s3:
          bucket: jinas-banner-images-bucket
          event: s3:ObjectCreated:Put
          existing: true